name: Unified Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      has-react-changes: ${{ steps.changes.outputs.react }}
      has-static-changes: ${{ steps.changes.outputs.static }}
      deploy-type: ${{ steps.changes.outputs.deploy_type }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Detect changes
        id: changes
        run: |
          # Check for React changes
          if git diff --name-only HEAD~1 | grep -q "^dashboard/"; then
            echo "react=true" >> $GITHUB_OUTPUT
            echo "deploy_type=react" >> $GITHUB_OUTPUT
          else
            echo "react=false" >> $GITHUB_OUTPUT
          fi
          
          # Check for static changes (only if no React changes)
          if git diff --name-only HEAD~1 | grep -E "\.(html|css|js|ico)$|fonts/|js/" | grep -v "^dashboard/"; then
            echo "static=true" >> $GITHUB_OUTPUT
            if [ "${{ steps.changes.outputs.react }}" != "true" ]; then
              echo "deploy_type=static" >> $GITHUB_OUTPUT
            fi
          else
            echo "static=false" >> $GITHUB_OUTPUT
          fi

  deploy-react:
    needs: detect-changes
    if: needs.detect-changes.outputs.deploy-type == 'react'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          cd dashboard
          npm ci
          
      - name: Create environment file
        run: |
          cd dashboard
          echo "VITE_APPSHEET_APP_ID=efcdb2a0-181f-4e43-bc65-6887dc279032" > .env.production
          echo "VITE_APPSHEET_API_KEY=${{ secrets.VITE_APPSHEET_API_KEY }}" >> .env.production
          
      - name: Build
        run: |
          cd dashboard
          npm run build
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dashboard/dist'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-static:
    needs: detect-changes
    if: needs.detect-changes.outputs.deploy-type == 'static'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 